{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/tasks-app/client/src/views/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from \"formik\";\nimport FormFields from \"../components/FormFields\";\nimport * as Yup from \"yup\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_TASK = gql`\n  mutation CreateTask(\n    $name: String!\n    $description: String!\n    $date: String!\n    $urgent: Boolean!\n  ) {\n    addTask(\n      name: $name\n      description: $description\n      date: $date\n      urgent: $urgent\n    ) {\n      success\n      message\n    }\n  }\n`;\n\nconst NewTask = ({\n  refetchTasks,\n  user\n}) => {\n  _s();\n\n  const [createTask, {\n    data\n  }] = useMutation(CREATE_TASK, {\n    onCompleted: () => refetchTasks()\n  });\n  const listid = \"assignees\";\n  let assignees = [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        description: \"\",\n        date: \"\",\n        urgent: false\n      },\n      validationSchema: Yup.object({\n        name: Yup.string().required(\"Required\"),\n        description: Yup.string().required(\"Required\"),\n        date: Yup.date(),\n        urgent: Yup.bool()\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          createTask({\n            variables: {\n              name: values.name,\n              description: values.description,\n              date: new Date(values.date).toISOString(),\n              urgent: values.urgent\n            }\n          });\n          setSubmitting(false);\n        }, 400);\n      },\n      className: \"flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Title\",\n          name: \"name\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Description\",\n          name: \"description\",\n          type: \"textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Date\",\n          name: \"date\",\n          type: \"datetime-local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Urgent\",\n          name: \"urgent\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            assignee: \"\"\n          },\n          onSubmit: values => assignees.push(values.assignee),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"flex items-center justify-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(FormFields, {\n              label: \"Assignee\",\n              list: listid,\n              name: \"assignee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"rounded w-full bg-yellow-200 hover:bg-yellow-500 \",\n              children: \"ADD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"rounded w-full bg-green-200 hover:bg-green-500\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), data ? data.addTask.message : null, /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: listid,\n      children: user.connections.map(connection => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: connection.email,\n          children: connection.name\n        }, connection.email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"5GQzrZx/BrBEsbTd1xxu1OEt2+o=\", false, function () {\n  return [useMutation];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/gaby/Projects/tasks-app/client/src/views/AddTask.js"],"names":["Formik","Form","FormFields","Yup","gql","useMutation","CREATE_TASK","NewTask","refetchTasks","user","createTask","data","onCompleted","listid","assignees","name","description","date","urgent","object","string","required","bool","values","setSubmitting","setTimeout","variables","Date","toISOString","assignee","push","addTask","message","connections","map","connection","email"],"mappings":"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","sourcesContent":["import { Formik, Form } from \"formik\";\nimport FormFields from \"../components/FormFields\";\nimport * as Yup from \"yup\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst CREATE_TASK = gql`\n  mutation CreateTask(\n    $name: String!\n    $description: String!\n    $date: String!\n    $urgent: Boolean!\n  ) {\n    addTask(\n      name: $name\n      description: $description\n      date: $date\n      urgent: $urgent\n    ) {\n      success\n      message\n    }\n  }\n`;\n\nconst NewTask = ({ refetchTasks, user }) => {\n  const [createTask, { data }] = useMutation(CREATE_TASK, {\n    onCompleted: () => refetchTasks(),\n  });\n  const listid = \"assignees\";\n  let assignees = [];\n  return (\n    <div className=\"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\">\n      <Formik\n        initialValues={{ name: \"\", description: \"\", date: \"\", urgent: false }}\n        validationSchema={Yup.object({\n          name: Yup.string().required(\"Required\"),\n          description: Yup.string().required(\"Required\"),\n          date: Yup.date(),\n          urgent: Yup.bool(),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            createTask({\n              variables: {\n                name: values.name,\n                description: values.description,\n                date: new Date(values.date).toISOString(),\n                urgent: values.urgent,\n              },\n            });\n            setSubmitting(false);\n          }, 400);\n        }}\n        className=\"flex items-center justify-center\"\n      >\n        <Form>\n          <FormFields label=\"Title\" name=\"name\" type=\"text\" />\n          <FormFields label=\"Description\" name=\"description\" type=\"textarea\" />\n          <FormFields label=\"Date\" name=\"date\" type=\"datetime-local\" />\n          <FormFields label=\"Urgent\" name=\"urgent\" type=\"checkbox\" />\n          <Formik\n            initialValues={{ assignee: \"\" }}\n            onSubmit={(values) => assignees.push(values.assignee)}\n          >\n            <Form className=\"flex items-center justify-items-center\">\n              <FormFields label=\"Assignee\" list={listid} name=\"assignee\" />{\" \"}\n              <button type=\"submit\" className=\"rounded w-full bg-yellow-200 hover:bg-yellow-500 \">ADD</button>\n            </Form>\n          </Formik>\n\n          <button\n            type=\"submit\"\n            className=\"rounded w-full bg-green-200 hover:bg-green-500\"\n          >\n            Create\n          </button>\n        </Form>\n      </Formik>\n      {data ? data.addTask.message : null}\n      <datalist id={listid}>\n        {user.connections.map((connection) => {\n          return (\n            <option value={connection.email} key={connection.email}>\n              {connection.name}\n            </option>\n          );\n        })}\n      </datalist>\n    </div>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}