{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/tasks-app/client/src/views/LoginView.js\",\n    _s = $RefreshSig$();\n\nimport { useMutation, gql } from \"@apollo/client\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      message\n    }\n  }\n`;\n\nconst LoginView = () => {\n  _s();\n\n  const [login, {\n    data\n  }] = useMutation(LOGIN, {\n    onCompleted: () => {\n      console.log(\"here\");\n      setMessage(data.login.message);\n    }\n  });\n  const [message, setMessage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object({\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n        password: Yup.string().required(\"Required\")\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          login({\n            variables: {\n              email: values.email,\n              password: values.password\n            }\n          });\n          setSubmitting(false);\n        }, 400);\n      },\n      className: \"flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"font-bold\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          className: \"rounded-lg \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\",\n          className: \"text-red-600 text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"font-bold\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          className: \"rounded-lg \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\",\n          className: \"text-red-600 text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 rounded-full w-full text-white\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 text-sm mt-2\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginView, \"YqJAdVg2Yia3gn/LEgnuN74g6CU=\", false, function () {\n  return [useMutation];\n});\n\n_c = LoginView;\nexport default LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["/home/gaby/Projects/tasks-app/client/src/views/LoginView.js"],"names":["useMutation","gql","Formik","Form","Field","ErrorMessage","Yup","useState","LOGIN","LoginView","login","data","onCompleted","console","log","setMessage","message","email","password","object","string","required","values","setSubmitting","setTimeout","variables"],"mappings":"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","sourcesContent":["import { useMutation, gql } from \"@apollo/client\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\n\nconst LOGIN = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      message\n    }\n  }\n`;\n\nconst LoginView = () => {\n  const [login, { data }] = useMutation(LOGIN, {\n    onCompleted: () => {\n      console.log(\"here\");\n      setMessage(data.login.message);\n    },\n  });\n  const [message, setMessage] = useState(\"\");\n  return (\n    <div className=\"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\">\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"Required\"),\n          password: Yup.string().required(\"Required\"),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            login({\n              variables: { email: values.email, password: values.password },\n            });\n            setSubmitting(false);\n          }, 400);\n        }}\n        className=\"flex items-center justify-center\"\n      >\n        <Form>\n          <label htmlFor=\"email\" className=\"font-bold\">\n            Email\n          </label>\n          <Field name=\"email\" type=\"email\" className=\"rounded-lg \" />\n          <ErrorMessage\n            name=\"email\"\n            component=\"div\"\n            className=\"text-red-600 text-sm\"\n          />\n          <div className=\"h-4\" />\n          <label htmlFor=\"password\" className=\"font-bold\">\n            Password\n          </label>\n          <Field name=\"password\" type=\"password\" className=\"rounded-lg \" />\n          <ErrorMessage\n            name=\"password\"\n            component=\"div\"\n            className=\"text-red-600 text-sm\"\n          />\n          <div className=\"h-4\" />\n          <button\n            type=\"submit\"\n            className=\"bg-blue-600 rounded-full w-full text-white\"\n          >\n            Login\n          </button>\n        </Form>\n      </Formik>\n      <div className=\"text-red-600 text-sm mt-2\">{message}</div>\n    </div>\n  );\n};\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}