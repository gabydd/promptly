{"ast":null,"code":"import _slicedToArray from\"/home/gaby/Projects/promptly/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/gaby/Projects/promptly/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import{gql,useMutation}from\"@apollo/client\";import{Formik,Form}from\"formik\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faEdit,faTrash}from\"@fortawesome/free-solid-svg-icons\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DELETE_TASK=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation DeleteTask($id: Int!) {\\n    deleteTask(id: $id) {\\n      message\\n      success\\n    }\\n  }\\n\"])));var EDIT_TASK=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  mutation EditTask(\\n    $id: Int!\\n    $assignees: [UserInput]\\n    $completed: Boolean\\n    $date: String\\n    $description: String\\n    $name: String\\n    $urgent: Boolean\\n  ) {\\n    editTask(\\n      id: $id\\n      assignees: $assignees\\n      completed: $completed\\n      date: $date\\n      description: $description\\n      name: $name\\n      urgent: $urgent\\n    ) {\\n      message\\n      success\\n    }\\n  }\\n\"])));var TaskView=function TaskView(_ref){var task=_ref.task,refetchTasks=_ref.refetchTasks;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var _useMutation=useMutation(DELETE_TASK,{onCompleted:function onCompleted(){return refetchTasks();}}),_useMutation2=_slicedToArray(_useMutation,1),deleteTask=_useMutation2[0];var _useMutation3=useMutation(EDIT_TASK,{onCompleted:function onCompleted(){return refetchTasks();}}),_useMutation4=_slicedToArray(_useMutation3,1),editTask=_useMutation4[0];return/*#__PURE__*/_jsxs(\"div\",{className:\"rounded-lg shadow-2xl flex flex-col \".concat(task.urgent?\"bg-red-400\":\"bg-blue-400\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold text-xl ml-auto\",children:task.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-auto mr-2 mt-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"group relative inline-block mt-1 mr-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setEditing(true);},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faEdit})}),/*#__PURE__*/_jsx(\"span\",{className:\"group-hover:inline-block absolute bg-gray-600 rounded shadow-lg z-50 left-1/2 top-full -ml-4 text-center text-white hidden\",children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"group relative inline-block\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return deleteTask({variables:{id:task.id}});},className:\"hover:bg-red-600 bg-green-600 rounded-full w-6 \",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTrash})}),/*#__PURE__*/_jsx(\"span\",{className:\"group-hover:inline-block absolute bg-gray-600 rounded shadow-lg z-50 left-1/2 top-full -ml-8 text-center text-white hidden\",children:\"Delete\"})]})]})]}),editing?/*#__PURE__*/_jsx(\"div\",{}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold\",children:\"Description\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-yellow-300 rounded\",children:task.description}),/*#__PURE__*/_jsx(\"div\",{children:new Date(Number(task.date)).toDateString()}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-bold\",children:[\"Manager:\",\"  \",/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-800 rounded-md inline-block text-white ml-1\",children:task.manager.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-bold\",children:[\"Assigned to:\",\"  \",task.assignees.map(function(assignee){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-purple-600 rounded-md inline-block text-white ml-1\",children:assignee.name},assignee.name);})]})]})]});};export default TaskView;","map":{"version":3,"sources":["/home/gaby/Projects/promptly/client/src/views/TaskView.js"],"names":["gql","useMutation","Formik","Form","FontAwesomeIcon","faEdit","faTrash","useState","DELETE_TASK","EDIT_TASK","TaskView","task","refetchTasks","editing","setEditing","onCompleted","deleteTask","editTask","urgent","name","variables","id","description","Date","Number","date","toDateString","manager","assignees","map","assignee"],"mappings":"yWAAA,OAASA,GAAT,CAAcC,WAAd,KAAiC,gBAAjC,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,QAA7B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,mCAAhC,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,GAAMC,CAAAA,WAAW,CAAGR,GAAH,4KAAjB,CASA,GAAMS,CAAAA,SAAS,CAAGT,GAAH,seAAf,CAwBA,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA4B,IAAzBC,CAAAA,IAAyB,MAAzBA,IAAyB,CAAnBC,YAAmB,MAAnBA,YAAmB,eACbL,QAAQ,CAAC,KAAD,CADK,wCACpCM,OADoC,eAC3BC,UAD2B,gCAEtBb,WAAW,CAACO,WAAD,CAAc,CAC5CO,WAAW,CAAE,6BAAMH,CAAAA,YAAY,EAAlB,EAD+B,CAAd,CAFW,8CAEpCI,UAFoC,oCAMxBf,WAAW,CAACQ,SAAD,CAAY,CACxCM,WAAW,CAAE,6BAAMH,CAAAA,YAAY,EAAlB,EAD2B,CAAZ,CANa,+CAMpCK,QANoC,kBAS3C,mBACE,aACE,SAAS,+CACPN,IAAI,CAACO,MAAL,CAAc,YAAd,CAA6B,aADtB,CADX,wBAKE,aAAK,SAAS,CAAC,eAAf,wBACE,YAAK,SAAS,CAAC,2BAAf,UAA4CP,IAAI,CAACQ,IAAjD,EADF,cAGE,aAAK,SAAS,CAAC,mBAAf,wBACE,aAAK,SAAS,CAAC,uCAAf,wBACE,eAAQ,OAAO,CAAE,yBAAML,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAAjB,uBACE,KAAC,eAAD,EAAiB,IAAI,CAAET,MAAvB,EADF,EADF,cAIE,aAAM,SAAS,CAAC,4HAAhB,kBAJF,GADF,cASE,aAAK,SAAS,CAAC,6BAAf,wBACE,eACE,OAAO,CAAE,yBAAMW,CAAAA,UAAU,CAAC,CAAEI,SAAS,CAAE,CAAEC,EAAE,CAAEV,IAAI,CAACU,EAAX,CAAb,CAAD,CAAhB,EADX,CAEE,SAAS,CAAC,iDAFZ,uBAIE,KAAC,eAAD,EAAiB,IAAI,CAAEf,OAAvB,EAJF,EADF,cAOE,aAAM,SAAS,CAAC,4HAAhB,oBAPF,GATF,GAHF,GALF,CA8BGO,OAAO,cACN,cADM,cAGN,oCACE,YAAK,SAAS,CAAC,WAAf,yBADF,cAEE,YAAK,SAAS,CAAC,uBAAf,UAAwCF,IAAI,CAACW,WAA7C,EAFF,cAGE,qBAAM,GAAIC,CAAAA,IAAJ,CAASC,MAAM,CAACb,IAAI,CAACc,IAAN,CAAf,EAA4BC,YAA5B,EAAN,EAHF,cAIE,aAAK,SAAS,CAAC,WAAf,sBACW,IADX,cAEE,YAAK,SAAS,CAAC,sDAAf,UACGf,IAAI,CAACgB,OAAL,CAAaR,IADhB,EAFF,GAJF,cAUE,aAAK,SAAS,CAAC,WAAf,0BACe,IADf,CAEGR,IAAI,CAACiB,SAAL,CAAeC,GAAf,CAAmB,SAACC,QAAD,qBAClB,YAEE,SAAS,CAAC,uDAFZ,UAIGA,QAAQ,CAACX,IAJZ,EACOW,QAAQ,CAACX,IADhB,CADkB,EAAnB,CAFH,GAVF,GAjCJ,GADF,CA2DD,CApED,CAsEA,cAAeT,CAAAA,QAAf","sourcesContent":["import { gql, useMutation } from \"@apollo/client\";\nimport { Formik, Form } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState } from \"react\";\n\nconst DELETE_TASK = gql`\n  mutation DeleteTask($id: Int!) {\n    deleteTask(id: $id) {\n      message\n      success\n    }\n  }\n`;\n\nconst EDIT_TASK = gql`\n  mutation EditTask(\n    $id: Int!\n    $assignees: [UserInput]\n    $completed: Boolean\n    $date: String\n    $description: String\n    $name: String\n    $urgent: Boolean\n  ) {\n    editTask(\n      id: $id\n      assignees: $assignees\n      completed: $completed\n      date: $date\n      description: $description\n      name: $name\n      urgent: $urgent\n    ) {\n      message\n      success\n    }\n  }\n`;\nconst TaskView = ({ task, refetchTasks }) => {\n  const [editing, setEditing] = useState(false);\n  const [deleteTask] = useMutation(DELETE_TASK, {\n    onCompleted: () => refetchTasks(),\n  });\n\n  const [editTask] = useMutation(EDIT_TASK, {\n    onCompleted: () => refetchTasks(),\n  });\n  return (\n    <div\n      className={`rounded-lg shadow-2xl flex flex-col ${\n        task.urgent ? \"bg-red-400\" : \"bg-blue-400\"\n      }`}\n    >\n      <div className=\"flex flex-row\">\n        <div className=\"font-bold text-xl ml-auto\">{task.name}</div>\n\n        <div className=\"ml-auto mr-2 mt-1\">\n          <div className=\"group relative inline-block mt-1 mr-2\">\n            <button onClick={() => setEditing(true)}>\n              <FontAwesomeIcon icon={faEdit} />\n            </button>\n            <span className=\"group-hover:inline-block absolute bg-gray-600 rounded shadow-lg z-50 left-1/2 top-full -ml-4 text-center text-white hidden\">\n              Edit\n            </span>\n          </div>\n          <div className=\"group relative inline-block\">\n            <button\n              onClick={() => deleteTask({ variables: { id: task.id } })}\n              className=\"hover:bg-red-600 bg-green-600 rounded-full w-6 \"\n            >\n              <FontAwesomeIcon icon={faTrash} />\n            </button>\n            <span className=\"group-hover:inline-block absolute bg-gray-600 rounded shadow-lg z-50 left-1/2 top-full -ml-8 text-center text-white hidden\">\n              Delete\n            </span>\n          </div>\n        </div>\n      </div>\n      {editing ? (\n        <div></div>\n      ) : (\n        <div>\n          <div className=\"font-bold\">Description</div>\n          <div className=\"bg-yellow-300 rounded\">{task.description}</div>\n          <div>{new Date(Number(task.date)).toDateString()}</div>\n          <div className=\"font-bold\">\n            Manager:{\"  \"}\n            <div className=\"bg-green-800 rounded-md inline-block text-white ml-1\">\n              {task.manager.name}\n            </div>\n          </div>\n          <div className=\"font-bold\">\n            Assigned to:{\"  \"}\n            {task.assignees.map((assignee) => (\n              <div\n                key={assignee.name}\n                className=\"bg-purple-600 rounded-md inline-block text-white ml-1\"\n              >\n                {assignee.name}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskView;\n"]},"metadata":{},"sourceType":"module"}