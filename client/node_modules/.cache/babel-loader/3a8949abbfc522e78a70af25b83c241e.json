{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/tasks-app/client/src/views/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from \"formik\";\nimport FormFields from \"../components/FormFields\";\nimport * as Yup from \"yup\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_TASK = gql`\n  mutation CreateTask($name: String!, $description: String!, $date: String!, $urgent: Boolean!) {\n    addTask(name: $name, description: $description, date: $date, urgent: $urgent) {\n      success\n      message\n    } \n  }\n`;\n\nconst NewTask = ({\n  refetchTasks,\n  user\n}) => {\n  _s();\n\n  const [createTask, {\n    data\n  }] = useMutation(CREATE_TASK, {\n    onCompleted: () => refetchTasks()\n  });\n  console.log(user.connections.map(connection => {\n    return connection.email;\n  }));\n  const listid = \"assignees\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        description: \"\",\n        date: \"\",\n        urgent: false\n      },\n      validationSchema: Yup.object({\n        name: Yup.string().required(\"Required\"),\n        description: Yup.string().required(\"Required\"),\n        date: Yup.date(),\n        urgent: Yup.bool()\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          createTask({\n            variables: {\n              name: values.name,\n              description: values.description,\n              date: new Date(values.date).toISOString(),\n              urgent: values.urgent\n            }\n          });\n          setSubmitting(false);\n        }, 400);\n      },\n      className: \"flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Title\",\n          name: \"name\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Description\",\n          name: \"description\",\n          type: \"textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Date\",\n          name: \"date\",\n          type: \"datetime-local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Urgent\",\n          name: \"urgent\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Assignee\",\n          list: listid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"rounded w-full bg-green-200 hover:bg-green-500\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), data ? data.addTask.message : null, /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: listid,\n      children: user.connections.map(connection => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: connection.email,\n          children: connection.name\n        }, connection.email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"14kdzdxE5AkiuhJl/9CshNEAiXg=\", false, function () {\n  return [useMutation];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/gaby/Projects/tasks-app/client/src/views/AddTask.js"],"names":["Formik","Form","FormFields","Yup","gql","useMutation","CREATE_TASK","NewTask","refetchTasks","user","createTask","data","onCompleted","console","log","connections","map","connection","email","listid","name","description","date","urgent","object","string","required","bool","values","setSubmitting","setTimeout","variables","Date","toISOString","addTask","message"],"mappings":"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","sourcesContent":["import { Formik, Form} from \"formik\";\nimport FormFields from \"../components/FormFields\";\nimport * as Yup from \"yup\"\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst CREATE_TASK = gql`\n  mutation CreateTask($name: String!, $description: String!, $date: String!, $urgent: Boolean!) {\n    addTask(name: $name, description: $description, date: $date, urgent: $urgent) {\n      success\n      message\n    } \n  }\n`\n\nconst NewTask = ({refetchTasks, user }) => {\n  const [createTask, {data}] = useMutation(CREATE_TASK, {\n    onCompleted: () => refetchTasks()\n  })\n  console.log(user.connections.map((connection) => \n  { return connection.email}));\n  const listid = \"assignees\"\n  return (\n    <div className=\"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\">\n      <Formik \n      initialValues={{name: \"\", description: \"\", date: \"\", urgent: false}}\n      validationSchema={Yup.object({\n        name: Yup.string().required(\"Required\"),\n        description: Yup.string().required(\"Required\"),\n        date: Yup.date(),\n        urgent: Yup.bool()\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          createTask({variables: {\n            name: values.name,\n            description: values.description,\n            date: new Date(values.date).toISOString(),\n            urgent: values.urgent\n          }})\n          setSubmitting(false);\n        }, 400);\n      }}\n      className=\"flex items-center justify-center\">\n        <Form>\n          <FormFields label=\"Title\" name=\"name\" type=\"text\"/>\n          <FormFields label=\"Description\" name=\"description\" type=\"textarea\"/>\n          <FormFields label=\"Date\" name=\"date\" type=\"datetime-local\" />\n          <FormFields label=\"Urgent\" name=\"urgent\" type=\"checkbox\" />\n          <FormFields label=\"Assignee\" list={listid} />\n          <button type=\"submit\" className=\"rounded w-full bg-green-200 hover:bg-green-500\">Create</button>\n        </Form>\n      </Formik>\n      {data ? data.addTask.message : null}\n      <datalist id={listid}>\n\n      {user.connections.map((connection) => \n      { return <option value={connection.email} key={connection.email} children={connection.name}></option>})}\n      </datalist>\n    </div>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}