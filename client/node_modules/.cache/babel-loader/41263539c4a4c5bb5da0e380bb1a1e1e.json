{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/promptly/client/src/views/GetResetTokenView.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"../components/FormFields\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_RESET_TOKEN = gql`\n  mutation CreateResetToken($email: String!) {\n    createResetToken(email: $email) {\n      message\n      success\n    }\n  }\n`;\n\nconst GetResetTokenView = () => {\n  _s();\n\n  const [createResetToken, {\n    data,\n    loading\n  }] = useMutation(CREATE_RESET_TOKEN);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Sending reset code...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  } else if (data === undefined | data && !data.createResetToken.success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\"\n        },\n        validationSchema: Yup.object({\n          email: Yup.string().email(\"Invalid email address\").required(\"Required\")\n        }),\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setTimeout(() => {\n            createResetToken({\n              variables: {\n                email: values.email\n              }\n            });\n            setSubmitting(false);\n          }, 400);\n        },\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormFields, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-blue-600 rounded-full w-full text-white\",\n            children: \"Forgot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), data && !data.createResetToken.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.createResetToken.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 51\n      }, this) : undefined]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else if (data.createResetToken.success) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/auth/forgot/reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(GetResetTokenView, \"A1nBzTvP5uzTtxWqtsFwjXjLatg=\", false, function () {\n  return [useMutation];\n});\n\n_c = GetResetTokenView;\nexport default GetResetTokenView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetResetTokenView\");","map":{"version":3,"sources":["/home/gaby/Projects/promptly/client/src/views/GetResetTokenView.js"],"names":["Formik","Form","Yup","FormFields","useMutation","gql","Redirect","CREATE_RESET_TOKEN","GetResetTokenView","createResetToken","data","loading","undefined","success","email","object","string","required","values","setSubmitting","setTimeout","variables","message"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,kBAAkB,GAAGF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,MAAMG,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,gBAAD,EAAmB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAnB,IAAwCP,WAAW,CAACG,kBAAD,CAAzD;;AAEA,MAAII,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAKD,IAAI,KAAKE,SAAV,GAAuBF,IAAvB,IAA+B,CAACA,IAAI,CAACD,gBAAL,CAAsBI,OAA1D,EAAmE;AACxE,wBACE;AAAK,MAAA,SAAS,EAAC,yFAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADjB;AAEE,QAAA,gBAAgB,EAAEZ,GAAG,CAACa,MAAJ,CAAW;AAC3BD,UAAAA,KAAK,EAAEZ,GAAG,CAACc,MAAJ,GACJF,KADI,CACE,uBADF,EAEJG,QAFI,CAEK,UAFL;AADoB,SAAX,CAFpB;AAOE,QAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,UAAAA;AAAF,SAAT,KAA+B;AACvCC,UAAAA,UAAU,CAAC,MAAM;AACfX,YAAAA,gBAAgB,CAAC;AACfY,cAAAA,SAAS,EAAE;AAAEP,gBAAAA,KAAK,EAAEI,MAAM,CAACJ;AAAhB;AADI,aAAD,CAAhB;AAIAK,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WANS,EAMP,GANO,CAAV;AAOD,SAfH;AAgBE,QAAA,SAAS,EAAC,kCAhBZ;AAAA,+BAkBE,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,OAAlB;AAA0B,YAAA,IAAI,EAAC,OAA/B;AAAuC,YAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA,cADF,EA8BGT,IAAI,IAAI,CAACA,IAAI,CAACD,gBAAL,CAAsBI,OAA/B,gBAAyC;AAAA,kBAAMH,IAAI,CAACD,gBAAL,CAAsBa;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAzC,GAAsFV,SA9BzF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD,GAnCM,MAmCA,IAAIF,IAAI,CAACD,gBAAL,CAAsBI,OAA1B,EAAmC;AACxC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CA3CD;;GAAML,iB;UAC0CJ,W;;;KAD1CI,iB;AA6CN,eAAeA,iBAAf","sourcesContent":["import { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"../components/FormFields\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { Redirect } from \"react-router-dom\";\n\nconst CREATE_RESET_TOKEN = gql`\n  mutation CreateResetToken($email: String!) {\n    createResetToken(email: $email) {\n      message\n      success\n    }\n  }\n`;\n\nconst GetResetTokenView = () => {\n  const [createResetToken, { data, loading }] = useMutation(CREATE_RESET_TOKEN);\n\n  if (loading) {\n    return <div>Sending reset code...</div>;\n  } else if ((data === undefined) | data && !data.createResetToken.success) {\n    return (\n      <div className=\"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\">\n        <Formik\n          initialValues={{ email: \"\" }}\n          validationSchema={Yup.object({\n            email: Yup.string()\n              .email(\"Invalid email address\")\n              .required(\"Required\"),\n          })}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              createResetToken({\n                variables: { email: values.email },\n              });\n\n              setSubmitting(false);\n            }, 400);\n          }}\n          className=\"flex items-center justify-center\"\n        >\n          <Form>\n            <FormFields label=\"Email\" name=\"email\" type=\"text\" />\n            <div className=\"h-4\" />\n            <button\n              type=\"submit\"\n              className=\"bg-blue-600 rounded-full w-full text-white\"\n            >\n              Forgot\n            </button>\n          </Form>\n        </Formik>\n        {data && !data.createResetToken.success ? <div>{data.createResetToken.message}</div> : undefined}\n      </div>\n    );\n  } else if (data.createResetToken.success) {\n    return <Redirect to=\"/auth/forgot/reset\" />;\n  }\n};\n\nexport default GetResetTokenView;\n"]},"metadata":{},"sourceType":"module"}