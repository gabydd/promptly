{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/promptly/client/src/views/ResetPasswordView.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"../components/FormFields\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RESET_PASSWORD = gql`\n  mutation ResetPassword($email: String!, $password: String!, $token: String!) {\n    resetPassword(email: $email, password: $password, token: $token) {\n      message\n      success\n    }\n  }\n`;\n\nconst ResetPasswordView = () => {\n  _s();\n\n  const [resetPassword, {\n    data,\n    loading\n  }] = useMutation(RESET_PASSWORD);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Checking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  } else if (data === undefined) {} else if (data.resetPassword.success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Reset successful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        is: \"button\",\n        className: \"bg-blue-600 rounded-full w-full text-white mt-5\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\",\n        token: \"\"\n      },\n      validationSchema: Yup.object({\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n        password: Yup.string().required(\"Required\"),\n        token: Yup.string().matches(/^\\d+$/, \"Reset code is only numbers\").length(6, \"Reset code is six digits\").required(\"Required\")\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          resetPassword({\n            variables: {\n              email: values.email,\n              password: values.password,\n              token: values.token\n            }\n          });\n          setSubmitting(false);\n        }, 400);\n      },\n      className: \"flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Email\",\n          name: \"email\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Reset Code\",\n          name: \"token\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 rounded-full w-full text-white\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), data && !data.resetPassword.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.resetPassword.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : undefined]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordView, \"VfGaXiwv9wUjeOW4hAC2m5qX4qM=\", false, function () {\n  return [useMutation];\n});\n\n_c = ResetPasswordView;\nexport default ResetPasswordView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordView\");","map":{"version":3,"sources":["/home/gaby/Projects/promptly/client/src/views/ResetPasswordView.js"],"names":["Formik","Form","Yup","FormFields","useMutation","gql","Link","RESET_PASSWORD","ResetPasswordView","resetPassword","data","loading","undefined","success","email","password","token","object","string","required","matches","length","values","setSubmitting","setTimeout","variables","message"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,cAAc,GAAGF,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,MAAMG,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,aAAD,EAAgB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAhB,IAAqCP,WAAW,CAACG,cAAD,CAAtD;;AACA,MAAII,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAID,IAAI,KAAKE,SAAb,EAAwB,CAC9B,CADM,MACA,IAAIF,IAAI,CAACD,aAAL,CAAmBI,OAAvB,EAAgC;AACrC,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,SAAS,EAAC,iDAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,yFAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE,EAAvB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OADjB;AAEE,MAAA,gBAAgB,EAAEd,GAAG,CAACe,MAAJ,CAAW;AAC3BH,QAAAA,KAAK,EAAEZ,GAAG,CAACgB,MAAJ,GACJJ,KADI,CACE,uBADF,EAEJK,QAFI,CAEK,UAFL,CADoB;AAI3BJ,QAAAA,QAAQ,EAAEb,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAJiB;AAK3BH,QAAAA,KAAK,EAAEd,GAAG,CAACgB,MAAJ,GACJE,OADI,CACI,OADJ,EACa,4BADb,EAEJC,MAFI,CAEG,CAFH,EAEM,0BAFN,EAGJF,QAHI,CAGK,UAHL;AALoB,OAAX,CAFpB;AAYE,MAAA,QAAQ,EAAE,CAACG,MAAD,EAAS;AAAEC,QAAAA;AAAF,OAAT,KAA+B;AACvCC,QAAAA,UAAU,CAAC,MAAM;AACff,UAAAA,aAAa,CAAC;AACZgB,YAAAA,SAAS,EAAE;AACTX,cAAAA,KAAK,EAAEQ,MAAM,CAACR,KADL;AAETC,cAAAA,QAAQ,EAAEO,MAAM,CAACP,QAFR;AAGTC,cAAAA,KAAK,EAAEM,MAAM,CAACN;AAHL;AADC,WAAD,CAAb;AAQAO,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAVS,EAUP,GAVO,CAAV;AAWD,OAxBH;AAyBE,MAAA,SAAS,EAAC,kCAzBZ;AAAA,6BA2BE,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,OAAlB;AAA0B,UAAA,IAAI,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,UAAlB;AAA6B,UAAA,IAAI,EAAC,UAAlC;AAA6C,UAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,YAAlB;AAA+B,UAAA,IAAI,EAAC,OAApC;AAA4C,UAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BF;AAAA;AAAA;AAAA;AAAA,YADF,EAyCGb,IAAI,IAAI,CAACA,IAAI,CAACD,aAAL,CAAmBI,OAA5B,gBACC;AAAA,gBAAMH,IAAI,CAACD,aAAL,CAAmBiB;AAAzB;AAAA;AAAA;AAAA;AAAA,YADD,GAEGd,SA3CN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CA5DD;;GAAMJ,iB;UACuCJ,W;;;KADvCI,iB;AA8DN,eAAeA,iBAAf","sourcesContent":["import { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"../components/FormFields\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\n\nconst RESET_PASSWORD = gql`\n  mutation ResetPassword($email: String!, $password: String!, $token: String!) {\n    resetPassword(email: $email, password: $password, token: $token) {\n      message\n      success\n    }\n  }\n`;\n\nconst ResetPasswordView = () => {\n  const [resetPassword, { data, loading }] = useMutation(RESET_PASSWORD);\n  if (loading) {\n    return <div>Checking</div>;\n  } else if (data === undefined) {\n  } else if (data.resetPassword.success) {\n    return (\n      <div>\n        <div>Reset successful</div>\n        <Link is=\"button\" className=\"bg-blue-600 rounded-full w-full text-white mt-5\">Sign In</Link>\n      </div>\n    );\n  }\n  return (\n    <div className=\"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\">\n      <Formik\n        initialValues={{ email: \"\", password: \"\", token: \"\" }}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"Required\"),\n          password: Yup.string().required(\"Required\"),\n          token: Yup.string()\n            .matches(/^\\d+$/, \"Reset code is only numbers\")\n            .length(6, \"Reset code is six digits\")\n            .required(\"Required\"),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            resetPassword({\n              variables: {\n                email: values.email,\n                password: values.password,\n                token: values.token,\n              },\n            });\n\n            setSubmitting(false);\n          }, 400);\n        }}\n        className=\"flex items-center justify-center\"\n      >\n        <Form>\n          <FormFields label=\"Email\" name=\"email\" type=\"text\" />\n          <FormFields label=\"Password\" name=\"password\" type=\"password\" />\n          <FormFields label=\"Reset Code\" name=\"token\" type=\"text\" />\n          <div className=\"h-4\" />\n          <button\n            type=\"submit\"\n            className=\"bg-blue-600 rounded-full w-full text-white\"\n          >\n            Reset\n          </button>\n        </Form>\n      </Formik>\n      {data && !data.resetPassword.success ? (\n        <div>{data.resetPassword.message}</div>\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default ResetPasswordView;\n"]},"metadata":{},"sourceType":"module"}