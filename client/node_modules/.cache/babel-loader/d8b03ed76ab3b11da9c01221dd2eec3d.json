{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/tasks/src/components/CalendarView.js\";\nimport DayView from \"./DayView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({\n  date,\n  testMonth\n}) => {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDay = date.getDate();\n\n  const fillMonthDays = days => {\n    let dayArray = [];\n\n    for (let day = 1; day < days; day++) {\n      dayArray.push(day);\n    }\n\n    return dayArray;\n  };\n\n  const fillMonthWeeks = days => {\n    let weekArray = [];\n\n    for (let week = 0; week < Math.ceil(days / 7); week++) {\n      weekArray.push(week);\n    }\n\n    return weekArray;\n  };\n\n  const daysInMonth = {\n    january: 31,\n    febuary: new Date(year, 1, 29).getMonth() === 1 ? 29 : 28,\n    march: 31,\n    april: 30,\n    may: 31,\n    june: 30,\n    july: 31,\n    august: 31,\n    september: 30,\n    october: 31,\n    november: 30,\n    december: 31\n  };\n  const dateData = {\n    months: {\n      january: {\n        days: fillMonthDays(daysInMonth.january),\n        weeks: fillMonthWeeks(daysInMonth.january)\n      },\n      febuary: {\n        days: fillMonthDays(daysInMonth.febuary),\n        weeks: fillMonthWeeks(daysInMonth.febuary)\n      },\n      march: {\n        days: fillMonthDays(daysInMonth.march),\n        weeks: fillMonthWeeks(daysInMonth.march)\n      },\n      april: {\n        days: fillMonthDays(daysInMonth.april),\n        weeks: fillMonthWeeks(daysInMonth.april)\n      },\n      may: {\n        days: fillMonthDays(daysInMonth.may),\n        weeks: fillMonthWeeks(daysInMonth.may)\n      },\n      june: {\n        days: fillMonthDays(daysInMonth.june),\n        weeks: fillMonthWeeks(daysInMonth.june)\n      },\n      july: {\n        days: fillMonthDays(daysInMonth.july),\n        weeks: fillMonthWeeks(daysInMonth.july)\n      },\n      august: {\n        days: fillMonthDays(daysInMonth.august),\n        weeks: fillMonthWeeks(daysInMonth.august)\n      },\n      september: {\n        days: fillMonthDays(daysInMonth.september),\n        weeks: fillMonthWeeks(daysInMonth.september)\n      },\n      october: {\n        days: fillMonthDays(daysInMonth.october),\n        weeks: fillMonthWeeks(daysInMonth.october)\n      },\n      november: {\n        days: fillMonthDays(daysInMonth.november),\n        weeks: fillMonthWeeks(daysInMonth.november)\n      },\n      december: {\n        days: fillMonthDays(daysInMonth.december),\n        weeks: fillMonthWeeks(daysInMonth.december)\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-7 grid-rows-5\",\n    children: dateData.months[testMonth].days.map(day => {\n      return /*#__PURE__*/_jsxDEV(DayView, {\n        day: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Calendar;\nexport default Calendar;\n/*\ndate.months[month].weeks.map((week) => {\n        return (\n          <tr key={week}>\n            {date.months[month].days\n              .slice(week * 7, week * 7 + 7)\n              .map((day) => {\n                return (\n                  <td key={day}>\n                    <DayCell day={day} />\n                  </td>\n                );\n              })}\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/gaby/Projects/tasks/src/components/CalendarView.js"],"names":["DayView","Calendar","date","testMonth","year","getFullYear","month","getMonth","firstDay","getDate","fillMonthDays","days","dayArray","day","push","fillMonthWeeks","weekArray","week","Math","ceil","daysInMonth","january","febuary","Date","march","april","may","june","july","august","september","october","november","december","dateData","months","weeks","map"],"mappings":"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","sourcesContent":["import DayView from \"./DayView\";\n\nconst Calendar = ({ date, testMonth }) => {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDay = date.getDate();\n  const fillMonthDays = (days) => {\n    let dayArray = [];\n\n    for (let day = 1; day < days; day++) {\n      dayArray.push(day);\n    }\n    return dayArray;\n  };\n  const fillMonthWeeks = (days) => {\n    let weekArray = [];\n    for (let week = 0; week < Math.ceil(days / 7); week++) {\n      weekArray.push(week);\n    }\n    return weekArray;\n  };\n  const daysInMonth = {\n    january: 31,\n    febuary: new Date(year, 1, 29).getMonth() === 1 ? 29 : 28,\n    march: 31,\n    april: 30,\n    may: 31,\n    june: 30,\n    july: 31,\n    august: 31,\n    september: 30,\n    october: 31,\n    november: 30,\n    december: 31,\n  };\n  const dateData = {\n    months: {\n      january: {\n        days: fillMonthDays(daysInMonth.january),\n        weeks: fillMonthWeeks(daysInMonth.january),\n      },\n      febuary: {\n        days: fillMonthDays(daysInMonth.febuary),\n        weeks: fillMonthWeeks(daysInMonth.febuary),\n      },\n      march: {\n        days: fillMonthDays(daysInMonth.march),\n        weeks: fillMonthWeeks(daysInMonth.march),\n      },\n      april: {\n        days: fillMonthDays(daysInMonth.april),\n        weeks: fillMonthWeeks(daysInMonth.april),\n      },\n      may: {\n        days: fillMonthDays(daysInMonth.may),\n        weeks: fillMonthWeeks(daysInMonth.may),\n      },\n      june: {\n        days: fillMonthDays(daysInMonth.june),\n        weeks: fillMonthWeeks(daysInMonth.june),\n      },\n      july: {\n        days: fillMonthDays(daysInMonth.july),\n        weeks: fillMonthWeeks(daysInMonth.july),\n      },\n      august: {\n        days: fillMonthDays(daysInMonth.august),\n        weeks: fillMonthWeeks(daysInMonth.august),\n      },\n      september: {\n        days: fillMonthDays(daysInMonth.september),\n        weeks: fillMonthWeeks(daysInMonth.september),\n      },\n      october: {\n        days: fillMonthDays(daysInMonth.october),\n        weeks: fillMonthWeeks(daysInMonth.october),\n      },\n      november: {\n        days: fillMonthDays(daysInMonth.november),\n        weeks: fillMonthWeeks(daysInMonth.november),\n      },\n      december: {\n        days: fillMonthDays(daysInMonth.december),\n        weeks: fillMonthWeeks(daysInMonth.december),\n      },\n    },\n  };\n\n  return (\n    <div className=\"grid grid-cols-7 grid-rows-5\">\n      {dateData.months[testMonth].days.map((day) => {\n        return <DayView day={day} />;\n      })}\n    </div>\n  );\n};\n\nexport default Calendar;\n\n/*\ndate.months[month].weeks.map((week) => {\n        return (\n          <tr key={week}>\n            {date.months[month].days\n              .slice(week * 7, week * 7 + 7)\n              .map((day) => {\n                return (\n                  <td key={day}>\n                    <DayCell day={day} />\n                  </td>\n                );\n              })}\n*/\n"]},"metadata":{},"sourceType":"module"}