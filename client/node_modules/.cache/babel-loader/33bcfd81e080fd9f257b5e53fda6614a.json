{"ast":null,"code":"import _slicedToArray from\"/home/gaby/Projects/tasks-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/gaby/Projects/tasks-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{useState}from\"react\";import Calendar from\"./CalendarView\";import AddTask from\"./AddTask\";import ViewSelector from\"./ViewSelector\";import{gql,useQuery}from\"@apollo/client\";import TasksView from\"./TasksView\";import{ConnectionsView}from\"./ConnectionsView\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GET_TASKS=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query GetTasks {\\n    getAssignedTasks {\\n      id\\n      name\\n      description\\n      date\\n      assignees {\\n        name\\n      }\\n      completed\\n      urgent\\n      manager {\\n        name\\n      }\\n    }\\n  }\\n\"])));var AppView=function AppView(_ref){var refetchUser=_ref.refetchUser,user=_ref.user;var _useState=useState(new Date()),_useState2=_slicedToArray(_useState,2),date=_useState2[0],setDate=_useState2[1];var logOut=function logOut(){document.cookie=\"token=; expires=0\";refetchUser();};var _useQuery=useQuery(GET_TASKS),loading=_useQuery.loading,data=_useQuery.data,refetch=_useQuery.refetch;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:logOut,children:\"Log Out\"}),/*#__PURE__*/_jsx(ViewSelector,{date:date,setDate:setDate}),/*#__PURE__*/_jsx(Calendar,{testMonth:\"september\",date:date}),/*#__PURE__*/_jsx(TasksView,{refetchTasks:refetch,tasks:data?data.getAssignedTasks:undefined,loading:loading?loading:undefined}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(AddTask,{refetchTasks:refetch,user:user}),/*#__PURE__*/_jsx(ConnectionsView,{refetchUser:refetchUser,user:user})]})]});};export default AppView;","map":{"version":3,"sources":["/home/gaby/Projects/tasks-app/client/src/views/AppView.js"],"names":["useState","Calendar","AddTask","ViewSelector","gql","useQuery","TasksView","ConnectionsView","GET_TASKS","AppView","refetchUser","user","Date","date","setDate","logOut","document","cookie","loading","data","refetch","getAssignedTasks","undefined"],"mappings":"0VAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,GAAT,CAAcC,QAAd,KAA8B,gBAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,eAAT,KAAgC,mBAAhC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGJ,GAAH,iSAAf,CAmBA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAA2B,IAAxBC,CAAAA,WAAwB,MAAxBA,WAAwB,CAAXC,IAAW,MAAXA,IAAW,eACjBX,QAAQ,CAAC,GAAIY,CAAAA,IAAJ,EAAD,CADS,wCAClCC,IADkC,eAC5BC,OAD4B,eAGzC,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBC,QAAQ,CAACC,MAAT,CAAkB,mBAAlB,CACAP,WAAW,GACZ,CAHD,CAHyC,cAONL,QAAQ,CAACG,SAAD,CAPF,CAOjCU,OAPiC,WAOjCA,OAPiC,CAOxBC,IAPwB,WAOxBA,IAPwB,CAOlBC,OAPkB,WAOlBA,OAPkB,CAQzC,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,eAAQ,OAAO,CAAEL,MAAjB,qBADF,cAEE,KAAC,YAAD,EAAc,IAAI,CAAEF,IAApB,CAA0B,OAAO,CAAEC,OAAnC,EAFF,cAGE,KAAC,QAAD,EAAU,SAAS,CAAC,WAApB,CAAgC,IAAI,CAAED,IAAtC,EAHF,cAIE,KAAC,SAAD,EACE,YAAY,CAAEO,OADhB,CAEE,KAAK,CAAED,IAAI,CAAGA,IAAI,CAACE,gBAAR,CAA2BC,SAFxC,CAGE,OAAO,CAAEJ,OAAO,CAAGA,OAAH,CAAaI,SAH/B,EAJF,cASE,aAAK,SAAS,CAAC,MAAf,wBACA,KAAC,OAAD,EAAS,YAAY,CAAEF,OAAvB,CAAgC,IAAI,CAAET,IAAtC,EADA,cAEA,KAAC,eAAD,EAAiB,WAAW,CAAED,WAA9B,CAA2C,IAAI,CAAEC,IAAjD,EAFA,GATF,GADF,CAgBD,CAxBD,CA0BA,cAAeF,CAAAA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport Calendar from \"./CalendarView\";\nimport AddTask from \"./AddTask\";\nimport ViewSelector from \"./ViewSelector\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport TasksView from \"./TasksView\";\nimport { ConnectionsView } from \"./ConnectionsView\";\n\nconst GET_TASKS = gql`\n  query GetTasks {\n    getAssignedTasks {\n      id\n      name\n      description\n      date\n      assignees {\n        name\n      }\n      completed\n      urgent\n      manager {\n        name\n      }\n    }\n  }\n`;\n\nconst AppView = ({ refetchUser, user }) => {\n  const [date, setDate] = useState(new Date());\n\n  const logOut = () => {\n    document.cookie = \"token=; expires=0\";\n    refetchUser();\n  };\n  const { loading, data, refetch } = useQuery(GET_TASKS);\n  return (\n    <div className=\"bg-gray-100\">\n      <button onClick={logOut}>Log Out</button>\n      <ViewSelector date={date} setDate={setDate} />\n      <Calendar testMonth=\"september\" date={date} />\n      <TasksView\n        refetchTasks={refetch}\n        tasks={data ? data.getAssignedTasks : undefined}\n        loading={loading ? loading : undefined}\n      />\n      <div className=\"flex\" >\n      <AddTask refetchTasks={refetch} user={user} />\n      <ConnectionsView refetchUser={refetchUser} user={user} />\n      </div>\n    </div>\n  );\n};\n\nexport default AppView;\n"]},"metadata":{},"sourceType":"module"}