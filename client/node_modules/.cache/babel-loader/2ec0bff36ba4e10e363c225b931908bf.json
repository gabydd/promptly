{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/tasks-app/client/src/views/TaskView.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Formik, Form } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DELETE_TASK = gql`\n  mutation DeleteTask($id: Int!) {\n    deleteTask(id: $id) {\n      message\n      success\n    }\n  }\n`;\nconst EDIT_TASK = gql`\n  mutation EditTask(\n    $id: Int!\n    $assignees: [AssigneeInput]\n    $completed: Boolean\n    $date: String\n    $description: String\n    $name: String\n    $urgent: Boolean\n  ) {\n    editTask(\n      id: $id\n      assignees: $assignees\n      completed: $completed\n      date: $date\n      description: $description\n      name: $name\n      urgent: $urgent\n    ) {\n      message\n      success\n    }\n  }\n`;\n\nconst TaskView = ({\n  task,\n  refetchTasks\n}) => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n  const [deleteTask] = useMutation(DELETE_TASK, {\n    onCompleted: () => refetchTasks()\n  });\n  const [editTask] = useMutation(EDIT_TASK, {\n    onCompleted: () => refetchTasks()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `rounded-lg shadow-2xl flex flex-col ${task.urgent ? \"bg-red-400\" : \"bg-blue-400\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold text-xl ml-auto\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group relative inline-block mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditing(true),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"group-hover:inline-block absolute bg-gray-600 rounded shadow-lg z-50 left-1/2 top-full -ml-8 text-center text-white hidden\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group relative inline-block ml-auto mr-2 mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask({\n            variables: {\n              id: task.id\n            }\n          }),\n          className: \"hover:bg-red-600 bg-green-600 rounded-full w-6 \",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"group-hover:inline-block absolute bg-gray-600 rounded shadow-lg z-50 left-1/2 top-full -ml-8 text-center text-white hidden\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-yellow-300 rounded\",\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: new Date(Number(task.date)).toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: [\"Manager:\", \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-800 rounded-md inline-block text-white ml-1\",\n          children: task.manager.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: [\"Assigned to:\", \"  \", task.assignees.map(assignee => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-purple-600 rounded-md inline-block text-white ml-1\",\n          children: assignee.name\n        }, assignee.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskView, \"rz7Z/wPj3CwvGCsca5wtNa8ts68=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = TaskView;\nexport default TaskView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskView\");","map":{"version":3,"sources":["/home/gaby/Projects/tasks-app/client/src/views/TaskView.js"],"names":["gql","useMutation","Formik","Form","FontAwesomeIcon","faEdit","faTrash","useState","DELETE_TASK","EDIT_TASK","TaskView","task","refetchTasks","editing","setEditing","deleteTask","onCompleted","editTask","urgent","name","variables","id","description","Date","Number","date","toDateString","manager","assignees","map","assignee"],"mappings":"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","sourcesContent":["import { gql, useMutation } from \"@apollo/client\";\nimport { Formik, Form } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState } from \"react\";\n\nconst DELETE_TASK = gql`\n  mutation DeleteTask($id: Int!) {\n    deleteTask(id: $id) {\n      message\n      success\n    }\n  }\n`;\n\nconst EDIT_TASK = gql`\n  mutation EditTask(\n    $id: Int!\n    $assignees: [AssigneeInput]\n    $completed: Boolean\n    $date: String\n    $description: String\n    $name: String\n    $urgent: Boolean\n  ) {\n    editTask(\n      id: $id\n      assignees: $assignees\n      completed: $completed\n      date: $date\n      description: $description\n      name: $name\n      urgent: $urgent\n    ) {\n      message\n      success\n    }\n  }\n`;\nconst TaskView = ({ task, refetchTasks }) => {\n  const [editing, setEditing] = useState(false);\n  const [deleteTask] = useMutation(DELETE_TASK, {\n    onCompleted: () => refetchTasks(),\n  });\n\n  const [editTask] = useMutation(EDIT_TASK, {\n    onCompleted: () => refetchTasks(),\n  });\n  return (\n    <div\n      className={`rounded-lg shadow-2xl flex flex-col ${\n        task.urgent ? \"bg-red-400\" : \"bg-blue-400\"\n      }`}\n    >\n      <div className=\"flex flex-row\">\n        <div className=\"font-bold text-xl ml-auto\">{task.name}</div>\n        <div className=\"group relative inline-block mt-1\">\n          <button onClick={() => setEditing(true)}>\n            <FontAwesomeIcon icon={faEdit} />\n          </button>\n          <span className=\"group-hover:inline-block absolute bg-gray-600 rounded shadow-lg z-50 left-1/2 top-full -ml-8 text-center text-white hidden\">\n            Edit\n          </span>\n        </div>\n        <div className=\"group relative inline-block ml-auto mr-2 mt-1\">\n          <button\n            onClick={() => deleteTask({ variables: { id: task.id } })}\n            className=\"hover:bg-red-600 bg-green-600 rounded-full w-6 \"\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </button>\n          <span className=\"group-hover:inline-block absolute bg-gray-600 rounded shadow-lg z-50 left-1/2 top-full -ml-8 text-center text-white hidden\">\n            Delete\n          </span>\n        </div>\n      </div>\n      {editing ? (\n        <div></div>\n      ) : (\n        <div>\n          <div className=\"font-bold\">Description</div>\n          <div className=\"bg-yellow-300 rounded\">{task.description}</div>\n          <div>{new Date(Number(task.date)).toDateString()}</div>\n          <div className=\"font-bold\">\n            Manager:{\"  \"}\n            <div className=\"bg-green-800 rounded-md inline-block text-white ml-1\">\n              {task.manager.name}\n            </div>\n          </div>\n          <div className=\"font-bold\">\n            Assigned to:{\"  \"}\n            {task.assignees.map((assignee) => (\n              <div\n                key={assignee.name}\n                className=\"bg-purple-600 rounded-md inline-block text-white ml-1\"\n              >\n                {assignee.name}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskView;\n"]},"metadata":{},"sourceType":"module"}