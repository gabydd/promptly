{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/tasks-app/client/src/views/SignUpView.js\",\n    _s = $RefreshSig$();\n\nimport { useMutation, gql } from \"@apollo/client\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGN_UP = gql`\n  mutation SignUp($email: String!, $password: String!, $name: String!) {\n    createAccount(email: $email, password: $password, name: $name) {\n      message\n    }\n  }\n`;\n\nconst SignUpView = ({\n  refetchUsers\n}) => {\n  _s();\n\n  const [signUp] = useMutation(SIGN_UP, {\n    onCompleted: data => {\n      setMessage(data.createAccount.message);\n      refetchUsers();\n    }\n  });\n  const [message, setMessage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object({\n        name: Yup.string().required(\"Required\"),\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n        password: Yup.string().required(\"Required\")\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          signUp({\n            variables: {\n              name: values.name,\n              email: values.email,\n              password: values.password\n            }\n          });\n          setSubmitting(false);\n        }, 400);\n      },\n      className: \"flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"font-bold\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          type: \"name\",\n          className: \"rounded-lg \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: \"div\",\n          className: \"text-red-600 text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"font-bold\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          className: \"rounded-lg \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\",\n          className: \"text-red-600 text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"font-bold\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          className: \"rounded-lg \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\",\n          className: \"text-red-600 text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 rounded-full w-full text-white\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 text-sm mt-2\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpView, \"DRH0gXD7XGeBCuTD6FKhcW9pclM=\", false, function () {\n  return [useMutation];\n});\n\n_c = SignUpView;\nexport default SignUpView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpView\");","map":{"version":3,"sources":["/home/gaby/Projects/tasks-app/client/src/views/SignUpView.js"],"names":["useMutation","gql","Formik","Form","Field","ErrorMessage","Yup","useState","SIGN_UP","SignUpView","refetchUsers","signUp","onCompleted","data","setMessage","createAccount","message","name","email","password","object","string","required","values","setSubmitting","setTimeout","variables"],"mappings":"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","sourcesContent":["import { useMutation, gql } from \"@apollo/client\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nconst SIGN_UP = gql`\n  mutation SignUp($email: String!, $password: String!, $name: String!) {\n    createAccount(email: $email, password: $password, name: $name) {\n      message\n    }\n  }\n`;\n\nconst SignUpView = ({ refetchUsers }) => {\n  const [signUp] = useMutation(SIGN_UP, {\n    onCompleted: (data) => {\n      setMessage(data.createAccount.message);\n      refetchUsers();\n    },\n  });\n  const [message, setMessage] = useState(\"\");\n  return (\n    <div className=\"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\">\n      <Formik\n        initialValues={{ name: \"\", email: \"\", password: \"\" }}\n        validationSchema={Yup.object({\n          name: Yup.string().required(\"Required\"),\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"Required\"),\n          password: Yup.string().required(\"Required\"),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            signUp({\n              variables: {\n                name: values.name,\n                email: values.email,\n                password: values.password,\n              },\n            });\n            setSubmitting(false);\n          }, 400);\n        }}\n        className=\"flex items-center justify-center\"\n      >\n        <Form>\n          <label htmlFor=\"name\" className=\"font-bold\">\n            Name\n          </label>\n          <Field name=\"name\" type=\"name\" className=\"rounded-lg \" />\n          <ErrorMessage\n            name=\"name\"\n            component=\"div\"\n            className=\"text-red-600 text-sm\"\n          />\n          <div className=\"h-4\" />\n          <label htmlFor=\"email\" className=\"font-bold\">\n            Email\n          </label>\n          <Field name=\"email\" type=\"email\" className=\"rounded-lg \" />\n          <ErrorMessage\n            name=\"email\"\n            component=\"div\"\n            className=\"text-red-600 text-sm\"\n          />\n          <div className=\"h-4\" />\n          <label htmlFor=\"password\" className=\"font-bold\">\n            Password\n          </label>\n          <Field name=\"password\" type=\"password\" className=\"rounded-lg \" />\n          <ErrorMessage\n            name=\"password\"\n            component=\"div\"\n            className=\"text-red-600 text-sm\"\n          />\n          <div className=\"h-4\" />\n          <button\n            type=\"submit\"\n            className=\"bg-blue-600 rounded-full w-full text-white\"\n          >\n            Sign Up\n          </button>\n        </Form>\n      </Formik>\n      <div className=\"text-red-600 text-sm mt-2\">{message}</div>\n    </div>\n  );\n};\n\nexport default SignUpView;\n"]},"metadata":{},"sourceType":"module"}