{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/tasks/src/components/CalendarView.js\";\nimport DayView from \"./DayView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = ({\n  date\n}) => {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDay = new Date(year, month, 1).getDay();\n  const lastDay = new Date(year, month, daysInMonth[month]);\n\n  const fillDays = month => {\n    let topArray = [];\n    let middleArray = [];\n    let bottomArray = [];\n\n    for (let day = daysInMonth[month - 1] - firstDay + 2; day < daysInMonth[month - 1] + 1; day++) {\n      topArray.push(day);\n    }\n\n    for (let day = 1; day < daysInMonth[month] + 1; day++) {\n      middleArray.push(day);\n    }\n\n    for (let day = 1; day < lastDay; day++) {\n      bottomArray.push(day);\n    }\n\n    let dayArray = [...topArray, ...middleArray, ...bottomArray];\n    return dayArray;\n  };\n\n  const daysInMonth = [31, new Date(year, 1, 29).getMonth() === 1 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-7 grid-rows-5\",\n    children: fillDays(month).map(day => {\n      return /*#__PURE__*/_jsxDEV(DayView, {\n        day: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Calendar;\nexport default Calendar;\n/*\ndate.months[month].weeks.map((week) => {\n        return (\n          <tr key={week}>\n            {date.months[month].days\n              .slice(week * 7, week * 7 + 7)\n              .map((day) => {\n                return (\n                  <td key={day}>\n                    <DayCell day={day} />\n                  </td>\n                );\n              })}\n*/\n\n/* const fillMonthWeeks = (days) => {\n  let weekArray = [];\n  for (let week = 0; week < Math.ceil(days / 7); week++) {\n    weekArray.push(week);\n  }\n  return weekArray;\n}; */\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/home/gaby/Projects/tasks/src/components/CalendarView.js"],"names":["DayView","Calendar","date","year","getFullYear","month","getMonth","firstDay","Date","getDay","lastDay","daysInMonth","fillDays","topArray","middleArray","bottomArray","day","push","dayArray","map"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAMC,IAAI,GAAGD,IAAI,CAACE,WAAL,EAAb;AACA,QAAMC,KAAK,GAAGH,IAAI,CAACI,QAAL,EAAd;AACA,QAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASL,IAAT,EAAeE,KAAf,EAAsB,CAAtB,EAAyBI,MAAzB,EAAjB;AACA,QAAMC,OAAO,GAAG,IAAIF,IAAJ,CAASL,IAAT,EAAeE,KAAf,EAAsBM,WAAW,CAACN,KAAD,CAAjC,CAAhB;;AACA,QAAMO,QAAQ,GAAIP,KAAD,IAAW;AAC1B,QAAIQ,QAAQ,GAAG,EAAf;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SACE,IAAIC,GAAG,GAAGL,WAAW,CAACN,KAAK,GAAG,CAAT,CAAX,GAAyBE,QAAzB,GAAoC,CADhD,EAEES,GAAG,GAAGL,WAAW,CAACN,KAAK,GAAG,CAAT,CAAX,GAAyB,CAFjC,EAGEW,GAAG,EAHL,EAIE;AACAH,MAAAA,QAAQ,CAACI,IAAT,CAAcD,GAAd;AACD;;AACD,SAAK,IAAIA,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGL,WAAW,CAACN,KAAD,CAAX,GAAqB,CAA7C,EAAgDW,GAAG,EAAnD,EAAuD;AACrDF,MAAAA,WAAW,CAACG,IAAZ,CAAiBD,GAAjB;AACD;;AACD,SACE,IAAIA,GAAG,GAAG,CADZ,EAEEA,GAAG,GAAGN,OAFR,EAGEM,GAAG,EAHL,EAIE;AACAD,MAAAA,WAAW,CAACE,IAAZ,CAAiBD,GAAjB;AACD;;AACD,QAAIE,QAAQ,GAAG,CAAC,GAAGL,QAAJ,EAAc,GAAGC,WAAjB,EAA8B,GAAGC,WAAjC,CAAf;AACA,WAAOG,QAAP;AACD,GAvBD;;AAyBA,QAAMP,WAAW,GAAG,CAClB,EADkB,EAElB,IAAIH,IAAJ,CAASL,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBG,QAAtB,OAAqC,CAArC,GAAyC,EAAzC,GAA8C,EAF5B,EAGlB,EAHkB,EAIlB,EAJkB,EAKlB,EALkB,EAMlB,EANkB,EAOlB,EAPkB,EAQlB,EARkB,EASlB,EATkB,EAUlB,EAVkB,EAWlB,EAXkB,EAYlB,EAZkB,CAApB;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,cACGM,QAAQ,CAACP,KAAD,CAAR,CAAgBc,GAAhB,CAAqBH,GAAD,IAAS;AAC5B,0BAAO,QAAC,OAAD;AAAS,QAAA,GAAG,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApDD;;KAAMf,Q;AAsDN,eAAeA,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import DayView from \"./DayView\";\n\nconst Calendar = ({ date }) => {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDay = new Date(year, month, 1).getDay();\n  const lastDay = new Date(year, month, daysInMonth[month])\n  const fillDays = (month) => {\n    let topArray = [];\n    let middleArray = [];\n    let bottomArray = [];\n    for (\n      let day = daysInMonth[month - 1] - firstDay + 2;\n      day < daysInMonth[month - 1] + 1;\n      day++\n    ) {\n      topArray.push(day);\n    }\n    for (let day = 1; day < daysInMonth[month] + 1; day++) {\n      middleArray.push(day);\n    }\n    for (\n      let day = 1;\n      day < lastDay;\n      day++\n    ) {\n      bottomArray.push(day);\n    }\n    let dayArray = [...topArray, ...middleArray, ...bottomArray];\n    return dayArray;\n  };\n\n  const daysInMonth = [\n    31,\n    new Date(year, 1, 29).getMonth() === 1 ? 29 : 28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31,\n  ];\n\n  return (\n    <div className=\"grid grid-cols-7 grid-rows-5\">\n      {fillDays(month).map((day) => {\n        return <DayView day={day} />;\n      })}\n    </div>\n  );\n};\n\nexport default Calendar;\n\n/*\ndate.months[month].weeks.map((week) => {\n        return (\n          <tr key={week}>\n            {date.months[month].days\n              .slice(week * 7, week * 7 + 7)\n              .map((day) => {\n                return (\n                  <td key={day}>\n                    <DayCell day={day} />\n                  </td>\n                );\n              })}\n*/\n/* const fillMonthWeeks = (days) => {\n  let weekArray = [];\n  for (let week = 0; week < Math.ceil(days / 7); week++) {\n    weekArray.push(week);\n  }\n  return weekArray;\n}; */\n"]},"metadata":{},"sourceType":"module"}