{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/promptly/client/src/views/ResetPasswordView.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"../components/FormFields\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RESET_PASSWORD = gql`\n  mutation ResetPassword($email: String!, $password: String!, $token: String!) {\n    resetPassword(email: $email, password: $password, token: $token) {\n      message\n      success\n    }\n  }\n`;\n\nconst ResetPasswordView = () => {\n  _s();\n\n  const [resetPassword, {\n    data,\n    loading\n  }] = useMutation(RESET_PASSWORD);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Checking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  } else if (data === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\",\n          token: \"\"\n        },\n        validationSchema: Yup.object({\n          email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n          password: Yup.string().required(\"Required\"),\n          token: Yup.string().matches(/^\\d+$/, \"Reset code is only numbers\").length(6, \"Reset code is six digits\").required(\"Required\")\n        }),\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setTimeout(() => {\n            resetPassword({\n              variables: {\n                email: values.email,\n                password: values.password,\n                token: values.token\n              }\n            });\n            setSubmitting(false);\n          }, 400);\n        },\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormFields, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n            label: \"Reset Code\",\n            name: \"token\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-blue-600 rounded-full w-full text-white\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else if (data.success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Reset successful\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(ResetPasswordView, \"VfGaXiwv9wUjeOW4hAC2m5qX4qM=\", false, function () {\n  return [useMutation];\n});\n\n_c = ResetPasswordView;\nexport default ResetPasswordView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordView\");","map":{"version":3,"sources":["/home/gaby/Projects/promptly/client/src/views/ResetPasswordView.js"],"names":["Formik","Form","Yup","FormFields","useMutation","gql","RESET_PASSWORD","ResetPasswordView","resetPassword","data","loading","undefined","email","password","token","object","string","required","matches","length","values","setSubmitting","setTimeout","variables","success","message"],"mappings":"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","sourcesContent":["import { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"../components/FormFields\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nconst RESET_PASSWORD = gql`\n  mutation ResetPassword($email: String!, $password: String!, $token: String!) {\n    resetPassword(email: $email, password: $password, token: $token) {\n      message\n      success\n    }\n  }\n`;\n\nconst ResetPasswordView = () => {\n  const [resetPassword, { data, loading }] = useMutation(RESET_PASSWORD);\n  if (loading) {\n    return <div>Checking</div>;\n  } else if (data === undefined) {\n    return (\n      <div className=\"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\">\n        <Formik\n          initialValues={{ email: \"\", password: \"\", token: \"\" }}\n          validationSchema={Yup.object({\n            email: Yup.string()\n              .email(\"Invalid email address\")\n              .required(\"Required\"),\n            password: Yup.string().required(\"Required\"),\n            token: Yup.string()\n              .matches(/^\\d+$/, \"Reset code is only numbers\")\n              .length(6, \"Reset code is six digits\")\n              .required(\"Required\"),\n          })}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              resetPassword({\n                variables: {\n                  email: values.email,\n                  password: values.password,\n                  token: values.token,\n                },\n              });\n\n              setSubmitting(false);\n            }, 400);\n          }}\n          className=\"flex items-center justify-center\"\n        >\n          <Form>\n            <FormFields label=\"Email\" name=\"email\" type=\"text\" />\n            <FormFields label=\"Password\" name=\"password\" type=\"password\" />\n            <FormFields label=\"Reset Code\" name=\"token\" type=\"text\" />\n            <div className=\"h-4\" />\n            <button\n              type=\"submit\"\n              className=\"bg-blue-600 rounded-full w-full text-white\"\n            >\n              Reset\n            </button>\n          </Form>\n        </Formik>\n      </div>\n    );\n  } else if (data.success) {\n    return <div>Reset successful</div>;\n  } else {\n    return <div>{data.message}</div>;\n  }\n};\n\nexport default ResetPasswordView;\n"]},"metadata":{},"sourceType":"module"}