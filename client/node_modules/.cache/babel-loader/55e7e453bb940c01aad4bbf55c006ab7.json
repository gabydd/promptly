{"ast":null,"code":"var _jsxFileName = \"/home/gaby/Projects/promptly/client/src/views/GetResetTokenView.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"../components/FormFields\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_RESET_TOKEN = gql`\n  mutation CreateResetToken($email: String!) {\n    createResetToken(email: $email) {\n      message\n      success\n    }\n  }\n`;\n\nconst GetResetTokenView = () => {\n  _s();\n\n  const [createResetToken, {\n    data,\n    loading\n  }] = useMutation(CREATE_RESET_TOKEN);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Sending reset code...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  } else if (data === undefined) {} else if (data.createResetToken.success) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/auth/forgot/reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\"\n      },\n      validationSchema: Yup.object({\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\")\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          createResetToken({\n            variables: {\n              email: values.email\n            }\n          });\n          setSubmitting(false);\n        }, 400);\n      },\n      className: \"flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormFields, {\n          label: \"Email\",\n          name: \"email\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 rounded-full w-full text-white\",\n          children: \"Forgot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      to: \"/auth\",\n      className: \"bg-blue-600 rounded-full w-full text-white mt-5 text-center\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), data && !data.createResetToken.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.createResetToken.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 49\n    }, this) : undefined]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetResetTokenView, \"A1nBzTvP5uzTtxWqtsFwjXjLatg=\", false, function () {\n  return [useMutation];\n});\n\n_c = GetResetTokenView;\nexport default GetResetTokenView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetResetTokenView\");","map":{"version":3,"sources":["/home/gaby/Projects/promptly/client/src/views/GetResetTokenView.js"],"names":["Formik","Form","Yup","FormFields","useMutation","gql","Redirect","Link","CREATE_RESET_TOKEN","GetResetTokenView","createResetToken","data","loading","undefined","success","email","object","string","required","values","setSubmitting","setTimeout","variables","message"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;;AAEA,MAAMC,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,MAAMI,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,gBAAD,EAAmB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAnB,IAAwCR,WAAW,CAACI,kBAAD,CAAzD;;AAEA,MAAII,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAKD,IAAI,KAAKE,SAAd,EAA0B,CAChC,CADM,MACA,IAAIF,IAAI,CAACD,gBAAL,CAAsBI,OAA1B,EAAmC;AACxC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,yFAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADjB;AAEE,MAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,CAAW;AAC3BD,QAAAA,KAAK,EAAEb,GAAG,CAACe,MAAJ,GACJF,KADI,CACE,uBADF,EAEJG,QAFI,CAEK,UAFL;AADoB,OAAX,CAFpB;AAOE,MAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,QAAAA;AAAF,OAAT,KAA+B;AACvCC,QAAAA,UAAU,CAAC,MAAM;AACfX,UAAAA,gBAAgB,CAAC;AACfY,YAAAA,SAAS,EAAE;AAAEP,cAAAA,KAAK,EAAEI,MAAM,CAACJ;AAAhB;AADI,WAAD,CAAhB;AAIAK,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SANS,EAMP,GANO,CAAV;AAOD,OAfH;AAgBE,MAAA,SAAS,EAAC,kCAhBZ;AAAA,6BAkBE,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,OAAlB;AAA0B,UAAA,IAAI,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA,YADF,eA8BE;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,SAAS,EAAC,6DAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF,EA+BGT,IAAI,IAAI,CAACA,IAAI,CAACD,gBAAL,CAAsBI,OAA/B,gBAAyC;AAAA,gBAAMH,IAAI,CAACD,gBAAL,CAAsBa;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAzC,GAAsFV,SA/BzF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA5CD;;GAAMJ,iB;UAC0CL,W;;;KAD1CK,iB;AA8CN,eAAeA,iBAAf","sourcesContent":["import { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormFields from \"../components/FormFields\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nconst CREATE_RESET_TOKEN = gql`\n  mutation CreateResetToken($email: String!) {\n    createResetToken(email: $email) {\n      message\n      success\n    }\n  }\n`;\n\nconst GetResetTokenView = () => {\n  const [createResetToken, { data, loading }] = useMutation(CREATE_RESET_TOKEN);\n\n  if (loading) {\n    return <div>Sending reset code...</div>;\n  } else if ((data === undefined)) {\n  } else if (data.createResetToken.success) {\n    return <Redirect to=\"/auth/forgot/reset\" />;\n  }\n  return (\n    <div className=\"bg-origin-padding w-min rounded-lg bg-gray-300 bg-opacity-90 shadow-2xl mt-10 ml-10 p-4\">\n      <Formik\n        initialValues={{ email: \"\" }}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"Required\"),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            createResetToken({\n              variables: { email: values.email },\n            });\n\n            setSubmitting(false);\n          }, 400);\n        }}\n        className=\"flex items-center justify-center\"\n      >\n        <Form>\n          <FormFields label=\"Email\" name=\"email\" type=\"text\" />\n          <div className=\"h-4\" />\n          <button\n            type=\"submit\"\n            className=\"bg-blue-600 rounded-full w-full text-white\"\n          >\n            Forgot\n          </button>\n        </Form>\n      </Formik>\n      <button to=\"/auth\" className=\"bg-blue-600 rounded-full w-full text-white mt-5 text-center\">Sign In</button>\n      {data && !data.createResetToken.success ? <div>{data.createResetToken.message}</div> : undefined}\n    </div>\n  );\n};\n\nexport default GetResetTokenView;\n"]},"metadata":{},"sourceType":"module"}